# Alyssa HTTP Server Changelog
------------------------------

v0.7.1 - 29.10.2022
• Performance and memory management improvements. This update does not feature anything new.

v0.7 - 15.10.2022
• UTF-8 Unicode support
	• Paths on code now uses Unicode by default, meaning you can set your htdocs root path to a folder with Unicode name and access files with Unicode names.
	• Directory index HTML is now UTF-8 encoded with Unicode file names support.
	• Console output (stdout) is now Unicode supported.
	• Obviously requests with Unicode characters can be parsed and responded with belonging file.
	• Config and custom action files also supports Unicode now.
• SSL support can be disabled from config now, eliminating the necessity of certificate file when compiled with SSL support
	• Server will run as SSL disabled when certificate/key is invalid, instead of aborting the whole application.
• Checks added for config
	• If port is invalid (> 65535 or < 0), server will print "invalid port specified on config" and quit.
	• If htroot path is invalid, server will try to create the folder on specified path first, and will quit if that fails.
• Fixed the security flaw that server sends .htaccess and .htpasswd files when requested, now instead server will respond with 403.
• Added resource data (.rdata/version info) to executable (Windows only).
• Some other fixes and improvements.


v0.6.2 - 02.10.2022
• Keep-alive is now actually supported.
	• Now server can reliably get and send multiple data from same TCP connection
	• Reverted the code change that caused listening sockets to be single threaded and resulting a deadlock on server as server still waits for data
	• With this release, server should be ready to use reliably on all clients
• Now server securely shuts down TCP connections before closing them, solving truncated headers, deadlocks and more problems on clients.	
• Parsing Query String from Request URL is now supported.
• Some other fixes and improvements

v0.6.1 - 30.09.2022
• Updated CGI code
	• Now CGIs work on their isolated environment with some CGI-spesific and PATH environment variables. Query-String support will be implemented in the next version.
• Some of the memory leaks fixed across the whole code
• Updated error page code
• Added fake 404 when client is unauthorized
• Added some error messages
• Keep-alive is now "theoretically" supported.
• Updated temporary MIME types code with an actual one, most popular formats are now supported.
• Server now can send 418 I'm a Teapot with custom actions
• Possibly some other things I forgot

v0.6 - 25.09.2022
• First implementation of CGI support
	• Executing anything is theoretically supported, including a shell. So be careful when running server with privileges
	• Giving POST/PUT payloads to stdin of CGI executables is supported. Running with GET without any input is supported.
	• URL Query strings are currently not supported. Environment variables are currently not supported.
• Extended custom actions
	• 2 layered custom actions implemented.
	• First layer is for whitelist,blacklist and new implemented authentication support.
	• Credentials for authencation will be read from, if given with a subparameter (this is also a new feature) specified file, or else the .htpasswd file with same name as such requested file
	• Second layer is for executing CGI and redirection.
• Initial HTTP POST and PUT support
	• POST and PUT requests will execute the defined CGI executable.
	• Client payload will be passed to stdin of such executable.
	• If no executable is set with a .htaccess file, server will return a 404 instead.
• Fixed the critical issue that server was sending garbage (NULL chars) with blocks that has less data than it's size, causing corruptions on files especially with range requests.
• Added parent directory to folder indexes.
• Probably some other things I forgot.

v0.5.1 - 14.09.2022
• HTTP Range Requests is now supported
• Completely rewritten core functions
	• Now files are read as blocks instead of single chars.
	• This hugely improved the file reading and transfer speeds (4MB/s vs. 350MB/s, a.k.a. my I/O limit)
	• CPU usage is much lower despite the much faster speeds (8 simultaneous connections @ 350MB/s uses %8 CPU on my system, a single connection with 4MB/s was using double of that), still needs improvements
• Now Requests with URIs that includes special characters and spaces are supported.
• Fixed the almost fully broken Request Header parser
• Fixed the bug on folder indexes that has files with spaces causes truncated HTML links
• Removed some debugging features
• Now connections are print to console optionally, disabled by default.

v0.5 - 10.09.2022
• Added HTTPS support with TLS 1.2
• Added file and folder count to folder index pages
• Removed port number from folder index pages

v0.4 - 09.09.2022
• First implementation of custom actions. For now it only supports redirections
• HTTP HEAD support
• Non-implemented Requests (HTTP POST,DELETE,etc.) will be responded with 501 Not Implemented, instead of sending nothing and holding connection forever
• Whitelist implementation, when enabled hosts on the list will be dropped just after connection.
• Renewed Request Header parser
• Now hostname always printed to console with IP address instead of hostname.
• Fixed some hardcoded strings
• Some other things that I forgot

v0.3 08.09.2022
• Now configuration is actually used.
• Now configuration flies are platform independent (newline terminators were causing problems on ex. when config written on Windows is used on *nix)
• Initial implementation of custom error pages (only 404 is supported for now)
• Folder index pages implemented
	• When enabled, requests to folders will be responded with a page that's index(contents) of folder 
	• Supports icons for folders and files
	• Size of files are shown
	• Folders are listed first, which is a thing Apple couldn't do to their OS since decades
• Now code is C++ 17

v0.2 - 05.09.2022
• Initial code for config implementation
• Initial handling of folders added.

v0.1.1 - 31.08.2022
• Now code is multi platform (Windows, Linux, Darwin).
• Error checking added for listening port for cases like occupied port.

v0.1 - First ever version - 30.08.2022
• This is the first version ever. First implementations made such as:
	• Initial HTTP GET implementation
	• Initial Server Response Header implementation
	• Initial Sockets code
	• Initial Client Request Header parser
	• Initial MIME Type implementation
	